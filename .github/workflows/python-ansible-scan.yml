name: Ansible & Python Lint & security checker for Push and Pull Events

on:
  push:
  pull_request:
    branches:
      - '*'

jobs:
  ansible-python-scan:
    runs-on:
      - ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        token: ${{ github.token }}
        fetch-depth: 0

    - name: Get Modified Files for Pull Request Event
      id: get-changed-files-pull
      if: github.event_name == 'pull_request'
      run: |
        git fetch origin
        if [ -n "${{ github.event.pull_request.base.sha }}" ]; then
          CHANGED_FILES=$(git diff --diff-filter=AM --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.sha }}")
          echo "Changed files: $CHANGED_FILES"
          CHANGED_FILES_STR=$(echo "$CHANGED_FILES" | tr '\n' ' ')
          echo "CHANGED_FILES_STR=$CHANGED_FILES_STR" >> $GITHUB_ENV
        else
          echo "No previous commit available. Skipping linting step."
        fi

    - name: Get Modified Files for Push Event
      id: get-changed-files      
      run: |
        if [ -n "${{ github.event.before }}" ]; then
          CHANGED_FILES=$(git diff --diff-filter=AM --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"
          CHANGED_FILES_STR=$(echo "$CHANGED_FILES" | tr '\n' ' ')
          echo "CHANGED_FILES_STR=$CHANGED_FILES_STR" >> $GITHUB_ENV
        else
          echo "No previous commit available. Skipping linting step."
        fi

    - name: Segregate YAML & PYTHON Files
      id: segregate-files
      run: |
        YAML_FILES=""
        PYTHON_FILES=""
        IFS=' ' read -ra CHANGED_FILES <<< "${CHANGED_FILES_STR}"
        for file in "${CHANGED_FILES[@]}"; do
          if [[ $file == *\.yml || $file == *\.yaml ]]; then
            YAML_FILES="$YAML_FILES $file"
          elif [[ $file == *\.py ]]; then
            PYTHON_FILES="$PYTHON_FILES $file"
          fi
        done
        echo "Segregated YAML Files: $YAML_FILES"
        echo "Segregated PYTHON files: $PYTHON_FILES"
        echo "yaml-files=$YAML_FILES" >> $GITHUB_OUTPUT
        echo "python-files=$PYTHON_FILES" >> $GITHUB_OUTPUT

    - name: Scan Ansible Playbooks
      run: |
        YAML_FILES="${{ steps.segregate-files.outputs.yaml-files }}"
        if [ -n "$YAML_FILES" ]; then
          ansible-lint $YAML_FILES
        else
          echo "No YAML/YML files found. Skipping Ansible Lint."
        fi

    - name: Scan python code using pylint
      run: |
        PYTHON_FILES="${{ steps.segregate-files.outputs.python-files }}"
        if [ -n "$PYTHON_FILES" ]; then
          pylint $PYTHON_FILES
        else
          echo "No python files found, skipping linting of python code"
        fi

    - name: scan python code using bandit
      run: |
        PYTHON_FILES="${{ steps.segregate-files.outputs.python-files }}"
        if [ -n "$PYTHON_FILES" ]; then
          bandit -r $PYTHON_FILES
        else
          echo "No python files found, skipping bandit scan"
        fi

    - name: No Files Found
      run: |
        if [ -z "$YAML_FILES" ]; then
          echo "No YAML/YML files found in the commit."
        fi
